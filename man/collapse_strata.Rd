% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/poststratify.R
\name{collapse_strata}
\alias{collapse_strata}
\title{Collapse small strata cells}
\usage{
collapse_strata(strata, n_min = 10, strategy = "distance")
}
\arguments{
\item{strata}{strata with weight adjustment factors, as produced by \code{poststrata(df, ...)}}

\item{n_min}{cells with fewer than \code{n_min} (weighted) observations are collapsed together with a nearby cell}

\item{strategy}{\code{distance} (recommended) or \code{adjacency} (classic)}
}
\description{
For every stratification factor that is added, the amount of strata
multiplies by the k levels of that factor, so even with large samples it is
quite common to end up with a handful of combinations that match only a
handful of observations. This can lead to extreme weight adjustment factors,
which technically are not biased but nevertheless lead to very unstable
estimates. We can deal with extreme weights directly (by clipping to a
maximum of e.g. 5 or 10), indirectly by collapsing small cells until each
cell has at least n_min observations, or both. (You should also consider
dropping observations with NA categorizations for stratification factors.)

The collapse algorithm below is fairly advanced in a couple of ways:
\itemize{
\item the default strategy (distance) will look for opportunities to collapse small,
similar cells across factor, rather than collapsing cells within one factor
at a time as most algorithms do
\item it allows for any two levels within a factor to have a prespecified distance,
a distance inferred from the ordering of an ordered factor, or an equal
distance between all levels
}

For a prespecified distance, the algorithm looks for a \code{coordinates}
attribute:

x <- factor(
x=c(1, 1, 3, 2),
levels=c('disagree', 'disagree slightly', 'agree nor disagree', 'agree')
)
attr(x, 'coordinates') <- c(1, 2, 3, 5)

The two strategies that are implemented by \code{collapse_strata} are:
\itemize{
\item the distance algorithm prefers to merge closely related cells regardless
of the factor in which levels are to be collapsed
\item the adjacency algorithm prefers to merge cells by collapsing levels
in the last factor (by column position) before moving to the next-to-last
factor and so on; more or less as described in Little 1993
}

(To test the adjacency strategy, which is still somewhat experimental,
specify strata in reverse order and see how that changes what cells get merged.)
}
